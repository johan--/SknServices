<?xml version="1.0"?>
<accessRegistry>
<!--
   config/access_registry.xml

   Along with class Secure::AccessRegistry and module AccessControl, this file describes those
   application resources that should be both secured and un-secured. This file is pre-processed
   by the class AccessRegistryUtility to enable the Access Authorization capability: which converts
   it into a Hash object.

   There are two general sets of entries or URIs.
        Page Entries
            Composed of URI: <controller_name>/<action_action>, example: "pages/home"
        Resource Entries
            Composed of URI: <any.string> you choose to represent a general permission.
            Typically you would makeup a URI and use that uri exclusively for an 'Add' button,
            or other click-able resource in your application.

   Page Entries are automatically validated by a security filter/callback plugged into the app's base controller,
   as a part of the ControllerAccessProfile::login_required() functionality.  If the user does not have
   a matching role for the current controller/action then they are redirected to the home page and given
   a 'not authorized' warning; otherwise they pass through to the desired page.

   Resource Entries are coded/implemented by you.  You decide on an URI syntax to composed a uri and then you
   use that name to verify access to a particular clickable before making it visible or allowing the user
   to take that action.  The User model includes a method called 'has_access?(uri, options)' which returns
   true if the user's permissions/roles are included in the URI's access list; otherwise false is returned. An
   example syntax might be "<Context>.<PageName>.<ActionName>" or "<Context>.<ProcessName>.<ActionName>"; where
   an example uri from the latter would be "User.PasswordReset.RequestReset", or "Client.FileUpload.Upload".
   Basically, your trying to authorize that a user "Can do a thing or action, and must give that action a uri!"

   Authorization is accomplished by first declaring URIs for all Pages, then all Resources that need to be secured.
   URI's are plain text strings which contain the label of the thing to be secured.  On the surrounding <resource>
   statement is a 'secured' attribute which indicates if this resource record is secure or not.  If its not, the
   record is considered documentation and will always return true to the #has_access?() api.

   Should a #has_access? request be made with a uri not recorded in the access registry, the default return is TRUE.
   Effectively granting access to any undocumented resource.

   Second, each entry is evaluated using the semantics of CRUD.  CREATE, READ, UPDATE, DELETE permissions
   each contain a list of authorized roles which a user MUST match one in order to be considered as having
   permission.  The user object is expected to have an array list of authorization 'roles' which was granted
   them by some administrator.  Permission entries are considered and created at application design time
   and represent the application's clickable capabilities, or pages and task links.

   Each authorized role in a permission statement may have one additional attribute named options.  An options
   attribute is composed of a string with one or more comma separated values; ex. options="OWNER,SCHEDULER,MANAGER".
   These entries if present must be matched by user's provided option value and the correct role, for the users
   authorization request to be granted.  Having the correct authorized role and the wrong or missing option, will
   cause the request to be denied.  If an authorized role is defined with options present, it must be matched.
   The possibility of a authorization request occurring against a authorized role that was not defined with the
   optional options attribute will simply be ignored; i.e. no attempt will be made to evaluate an options attribute
   that does not exist.

   In summary, if every application page and clickable action is predefined in this registry and the
   #has_[access|create|read|update|delete]? api's are used to check access; the application can secure and
   easily administer its core capabilities.

   "Services.Action.Developer" has been implemented to bypass every defined resource.  Please be careful who
   you assign it too.


					    -*-*-*-   Table of Contents  -*-*-*-
	 
	 * Menu Page Registry			    All pages accessable from a menu
	 * GLOBAL System Resources			Unsecured (login, logout, etc.)
	 
	 * GLOBAL User Pages 		        Unsecured (home )
	 * PROTECTED Task Links  			Secured Navigation Links.  (Create Account, Admin, etc.)

	 * Development Resources            Secured pages which show system activity or state


   * FULL RESOURCE SYNTAX **********************************************
    
    <resource secured="true|false">
        <uri>anyString</uri>
        <description></description>
        <permission type="CREATE|READ|UPDATE|DELETE">
            <authorizedRoles>
                <authorizedRole options="anyOption">security-role-name</authorizedRole>
                <authorizedRole>security-user-group-name</authorizedRole>
                <authorizedRole>All Authorized Users</authorizedRole>
            </authorizedRoles>
        </permission>
    </resource>
    
    
    
   * PARTIAL RESOURCE SYNTAX *******************************************
    
    <resource secured="false"> 
        <uri>anyString</uri>
        <description>Any String can be a URI.</description>
    </resource>

    UserData Required format/syntax is:
       returns Array if value|value,...
       returns Hash  if key:value|key:value|...
       returns String if no reserve chars present
       Reserved chars: |:  # vertical-bar and semi-colon


-->

    <!--============== RSpec Test Data  ========== -->
    <resource secured="false">
        <uri>testing/public</uri>
        <description>Unsecured or Public Resource. (Hash)</description>
        <userdata>"drawerid:27655173|filetype:27635476|foldertype:27637844|doctype:955"</userdata>
    </resource>
    <resource secured="false">
        <uri>testing/public_array</uri>
        <description>Unsecured or Public Resource. (Array)</description>
        <userdata>"drawerid|filetype|foldertype|doctype"</userdata>
    </resource>
    <resource secured="false">
        <uri>testing/public_string</uri>
        <description>Unsecured or Public Resource. (String)</description>
        <userdata>"value without vertical-bars or semi-colons will return as string"</userdata>
    </resource>

    <resource secured="true">
        <uri>testing/userdata</uri>
        <description>Secured Content Description (Hash)</description>
        <userdata>"drawerid:27655173|filetype:27635476|foldertype:27637844|doctype:955"</userdata>
        <permission type="READ">
            <authorizedRoles>
                <authorizedRole>Test.Action.Create</authorizedRole>
                <authorizedRole>Test.Action.Read</authorizedRole>
                <authorizedRole>Test.Action.Update</authorizedRole>
                <authorizedRole>Test.Action.Delete</authorizedRole>
            </authorizedRoles>
        </permission>
    </resource>

    <resource secured="true">
        <uri>testing/role/progressive</uri>
        <description>Testing Resource Only: Progressive Capability</description>
        <permission type="READ">
            <authorizedRoles>
                <authorizedRole>Test.Action.Create</authorizedRole>
                <authorizedRole>Test.Action.Read</authorizedRole>
                <authorizedRole>Test.Action.Update</authorizedRole>
                <authorizedRole>Test.Action.Delete</authorizedRole>
            </authorizedRoles>
        </permission>
        <permission type="UPDATE">
            <authorizedRoles>
                <authorizedRole>Test.Action.Update</authorizedRole>
                <authorizedRole>Test.Action.Create</authorizedRole>
                <authorizedRole>Test.Action.Delete</authorizedRole>
            </authorizedRoles>
        </permission>
        <permission type="CREATE">
            <authorizedRoles>
                <authorizedRole>Test.Action.Create</authorizedRole>
                <authorizedRole>Test.Action.Delete</authorizedRole>
            </authorizedRoles>
        </permission>
        <permission type="DELETE">
            <authorizedRoles>
                <authorizedRole>Test.Action.Delete</authorizedRole>
                <authorizedRole>Services.Action.Developer</authorizedRole>
            </authorizedRoles>
        </permission>
    </resource>

    <resource secured="true">
        <uri>testing/role/absolutes</uri>
        <description>Testing Resource Only: Absolute Capability</description>
        <permission type="READ">
            <authorizedRoles>
                <authorizedRole>Test.Action.Read</authorizedRole>
            </authorizedRoles>
        </permission>
        <permission type="UPDATE">
            <authorizedRoles>
                <authorizedRole>Test.Action.Update</authorizedRole>
            </authorizedRoles>
        </permission>
        <permission type="CREATE">
            <authorizedRoles>
                <authorizedRole>Test.Action.Create</authorizedRole>
            </authorizedRoles>
        </permission>
        <permission type="DELETE">
            <authorizedRoles>
                <authorizedRole>Test.Action.Delete</authorizedRole>
                <authorizedRole>Services.Action.Developer</authorizedRole>
            </authorizedRoles>
        </permission>
    </resource>

    <resource secured="true">
        <uri>testing/role/options</uri>
        <description>Testing Resource Only: Options Special Ownership Granting Capability</description>
        <permission type="READ">
            <authorizedRoles>
                <authorizedRole>Test.Action.Read</authorizedRole>
            </authorizedRoles>
        </permission>
        <permission type="UPDATE">
            <authorizedRoles>
                <authorizedRole options="OBJECT-OWNER">Test.Action.Read</authorizedRole>
                <authorizedRole>Test.Action.Update</authorizedRole>
            </authorizedRoles>
        </permission>
        <permission type="CREATE">
            <authorizedRoles>
                <authorizedRole options="CLIENT-MANAGER">Test.Action.Read</authorizedRole>
                <authorizedRole>Test.Action.Create</authorizedRole>
            </authorizedRoles>
        </permission>
        <permission type="DELETE">
            <authorizedRoles>
                <authorizedRole>Test.Action.Delete</authorizedRole>
                <authorizedRole>Services.Action.Developer</authorizedRole>
            </authorizedRoles>
        </permission>
    </resource>

<!--============================================================================= -->
<!--========================= RESOURCE REGISTRY  ================================ -->
<!--============================================================================= -->

    <!--============== System Menu  ========== -->
    <resource secured="true">
        <uri>#Management</uri>
        <description>Management Menu</description>
        <permission type="READ">
            <authorizedRoles>
                <authorizedRole>Services.Action.Admin</authorizedRole>
                <authorizedRole>Services.Action.Developer</authorizedRole>
                <authorizedRole>Services.Action.Admin.UserRecords</authorizedRole>
            </authorizedRoles>
        </permission>
    </resource>
    <resource secured="true">
        <uri>#Administration</uri>
        <description>Authentication Admin</description>
        <permission type="READ">
            <authorizedRoles>
                <authorizedRole>Services.Action.Admin</authorizedRole>
                <authorizedRole>Services.Action.Developer</authorizedRole>
                <authorizedRole>Services.Action.Admin.UserRecords</authorizedRole>
            </authorizedRoles>
        </permission>
    </resource>
    <resource secured="true">
        <uri>#GroupManagement</uri>
        <description>AccessProfile Admin</description>
        <permission type="READ">
            <authorizedRoles>
                <authorizedRole>Services.Action.Admin</authorizedRole>
                <authorizedRole>Services.Action.Developer</authorizedRole>
                <authorizedRole>Services.Action.Admin.UserAuthorizationGroups</authorizedRole>
            </authorizedRoles>
        </permission>
    </resource>
    <resource secured="true">
        <uri>#ContentProfileManagement</uri>
        <description>ContentProfile Admin</description>
        <permission type="READ">
            <authorizedRoles>
                <authorizedRole>Services.Action.Admin</authorizedRole>
                <authorizedRole>Services.Action.Developer</authorizedRole>
                <authorizedRole>Services.Action.Admin.ContentProfile</authorizedRole>
            </authorizedRoles>
        </permission>
    </resource>
    <resource secured="true">
        <uri>#Demonstration</uri>
        <description>Content Profile In Action</description>
        <permission type="READ">
            <authorizedRoles>
                <authorizedRole>Services.Action.Admin</authorizedRole>
                <authorizedRole>Services.Action.Developer</authorizedRole>
                <authorizedRole>Services.Action.Admin.ContentProfile</authorizedRole>
            </authorizedRoles>
        </permission>
    </resource>


    <!--============== Profiles Pages  ========== --> profiles/accessible_content
    <resource secured="true">
        <uri>profiles/accessible_content</uri>
        <description>AccessibleContent API.JSON</description>
        <permission type="READ">
            <authorizedRoles>
                <authorizedRole>Services.Action.Admin</authorizedRole>
                <authorizedRole>Services.Action.Developer</authorizedRole>
            </authorizedRoles>
        </permission>
    </resource>

    <resource secured="true">
        <uri>profiles/access_profile_demo</uri>
        <description>AccessProfile In Action</description>
        <permission type="READ">
            <authorizedRoles>
                <authorizedRole>Services.Action.Admin</authorizedRole>
                <authorizedRole>Services.Action.Developer</authorizedRole>
                <authorizedRole>Services.Action.Admin.UserAuthorizationGroups</authorizedRole>
                <authorizedRole>Services.Action.Use.UserAuthorizationGroups</authorizedRole>
            </authorizedRoles>
        </permission>
    </resource>

    <resource secured="true">
        <uri>profiles/content_profile_demo</uri>
        <description>ContentProfile In Action</description>
        <permission type="READ">
            <authorizedRoles>
                <authorizedRole>Services.Action.Admin</authorizedRole>
                <authorizedRole>Services.Action.Developer</authorizedRole>
                <authorizedRole>Services.Action.Admin.ContentProfile</authorizedRole>
                <authorizedRole>Services.Action.Use.ContentProfile</authorizedRole>
            </authorizedRoles>
        </permission>
    </resource>

    <!--============== Public Pages  ========== -->
    <resource secured="false">
        <uri>/signout</uri>
        <description>Logout</description>
    </resource>
    <resource secured="false"> <!-- This resource is not protected, since unauthorized users need to see it. -->
        <uri>/signin</uri>
        <description>Sign-in</description>
    </resource>
    <resource secured="false">
        <uri>sessions/new</uri>
        <description>Login</description>
    </resource>
    <resource secured="false">
        <uri>sessions</uri>
        <description>Create Login</description>
    </resource>
    <resource secured="false">
        <uri>sessions/create</uri>
        <description>Create Login</description>
    </resource>
    <resource secured="false">
        <uri>session</uri>
        <description>Logout</description>
    </resource>
    <resource secured="false">
        <uri>sessions/destroy</uri>
        <description>Logout</description>
    </resource>
    <resource secured="false">
        <uri>sessions/unauthenticated</uri>
        <description>Your request is not authorized!</description>
    </resource>
    <resource secured="false">
        <uri>pages/home</uri>
        <description>Welcome to SknService</description>
    </resource>
    <resource secured="false">
        <uri>pages/about</uri>
        <description>About</description>
    </resource>
    <resource secured="false">
        <uri>pages/model_details</uri>
        <description>Information Model Details</description>
    </resource>
    <resource secured="false">
        <uri>pages/learn_more</uri>
        <description>More Information</description>
    </resource>
    <resource secured="false">
        <uri>pages/details_content</uri>
        <description>ContentProfile Details</description>
    </resource>
    <resource secured="false">
        <uri>pages/details_access</uri>
        <description>AccessProfile Details</description>
    </resource>
    <resource secured="false">
        <uri>pages/details_auth</uri>
        <description>Authentication Details</description>
    </resource>


    <!--============== PasswordResets Process  ========== -->
    <resource secured="false">
        <uri>password_resets/new</uri>
        <description>PasswordResets Action - New</description>
        <permission type="CREATE">
            <authorizedRoles>
                <authorizedRole>Services.Action.ResetPassword</authorizedRole>
                <authorizedRole>Services.Action.Developer</authorizedRole>
            </authorizedRoles>
        </permission>
    </resource>
    <resource secured="false">
        <uri>password_resets/edit</uri>
        <description>PasswordResets Action - Edit</description>
        <permission type="UPDATE">
            <authorizedRoles>
                <authorizedRole>Services.Action.ResetPassword</authorizedRole>
                <authorizedRole>Services.Action.Developer</authorizedRole>
            </authorizedRoles>
        </permission>
    </resource>
    <resource secured="false">
        <uri>password_resets/update</uri>
        <description>PasswordResets Action - Update</description>
        <permission type="UPDATE">
            <authorizedRoles>
                <authorizedRole>Services.Action.ResetPassword</authorizedRole>
                <authorizedRole>Services.Action.Developer</authorizedRole>
            </authorizedRoles>
        </permission>
    </resource>
    <resource secured="false">
        <uri>password_resets/create</uri>
        <description>PasswordResets Action - Create</description>
        <permission type="CREATE">
            <authorizedRoles>
                <authorizedRole>Services.Action.ResetPassword</authorizedRole>
                <authorizedRole>Services.Action.Developer</authorizedRole>
            </authorizedRoles>
        </permission>
    </resource>

    <!--============== Users Pages  ========== -->
    <resource secured="true">
        <uri>users/index</uri>
        <description>Users</description>
        <permission type="READ">
            <authorizedRoles>
                <authorizedRole>Services.Action.Admin</authorizedRole>
                <authorizedRole>Services.Action.Developer</authorizedRole>
                <authorizedRole>Services.Action.Admin.UserRecords</authorizedRole>
            </authorizedRoles>
        </permission>
    </resource>
    <resource secured="true">
        <uri>users/show</uri>
        <description>Show User</description>
        <permission type="READ">
            <authorizedRoles>
                <authorizedRole>Users.Action.Read</authorizedRole>
                <authorizedRole>Services.Action.Admin</authorizedRole>
                <authorizedRole>Services.Action.Developer</authorizedRole>
                <authorizedRole>Services.Action.Admin.UserRecords</authorizedRole>
                <authorizedRole>Services.Action.Use.UserRecords</authorizedRole>
            </authorizedRoles>
        </permission>
    </resource>
    <resource secured="true">
        <uri>users/new</uri>
        <description>New User</description>
        <permission type="CREATE">
            <authorizedRoles>
                <authorizedRole>Services.Action.Admin</authorizedRole>
                <authorizedRole>Services.Action.Developer</authorizedRole>
                <authorizedRole>Services.Action.Admin.UserRecords</authorizedRole>
            </authorizedRoles>
        </permission>
    </resource>
    <resource secured="true">
        <uri>users/edit</uri>
        <description>Edit User</description>
        <permission type="UPDATE">
            <authorizedRoles>
                <authorizedRole>Services.Action.Admin</authorizedRole>
                <authorizedRole>Services.Action.Developer</authorizedRole>
                <authorizedRole>Services.Action.Admin.UserRecords</authorizedRole>
            </authorizedRoles>
        </permission>
    </resource>
    <resource secured="true">
        <uri>users/update</uri>
        <description>Update User</description>
        <permission type="UPDATE">
            <authorizedRoles>
                <authorizedRole>Services.Action.Admin</authorizedRole>
                <authorizedRole>Services.Action.Developer</authorizedRole>
                <authorizedRole>Services.Action.Admin.UserRecords</authorizedRole>
            </authorizedRoles>
        </permission>
    </resource>
    <resource secured="true">
        <uri>users/create</uri>
        <description>User Action - Create</description>
        <permission type="CREATE">
            <authorizedRoles>
                <authorizedRole>Services.Action.Admin</authorizedRole>
                <authorizedRole>Services.Action.Developer</authorizedRole>
                <authorizedRole>Services.Action.Admin.UserRecords</authorizedRole>
            </authorizedRoles>
        </permission>
    </resource>
    <resource secured="true">
        <uri>users/destroy</uri>
        <description>Destroy User</description>
        <permission type="DELETE">
            <authorizedRoles>
                <authorizedRole>Services.Action.Admin</authorizedRole>
                <authorizedRole>Services.Action.Developer</authorizedRole>
                <authorizedRole>Services.Action.Admin.UserRecords</authorizedRole>
            </authorizedRoles>
        </permission>
    </resource>

    <!--=========================  Content Profile Process  ============================ -->
    <resource secured="true">
        <uri>content_profiles/index</uri>
        <description>Content Profiles</description>
        <permission type="READ">
            <authorizedRoles>
                <authorizedRole>Services.Action.Admin</authorizedRole>
                <authorizedRole>Services.Action.Developer</authorizedRole>
                <authorizedRole>Services.Action.Admin.ContentProfile</authorizedRole>
            </authorizedRoles>
        </permission>
    </resource>
    <resource secured="true">
        <uri>content_profiles/show</uri>
        <description>Content Profile: Show</description>
        <permission type="READ">
            <authorizedRoles>
                <authorizedRole>Services.Action.Admin</authorizedRole>
                <authorizedRole>Services.Action.Developer</authorizedRole>
                <authorizedRole>Services.Action.Admin.ContentProfile</authorizedRole>
                <authorizedRole>Services.Action.Use.ContentProfile</authorizedRole>
            </authorizedRoles>
        </permission>
    </resource>
    <resource secured="true">
        <uri>content_profiles/new</uri>
        <description>Content Profiles: New</description>
        <permission type="CREATE">
            <authorizedRoles>
                <authorizedRole>Services.Action.Admin</authorizedRole>
                <authorizedRole>Services.Action.Developer</authorizedRole>
                <authorizedRole>Services.Action.Admin.ContentProfile</authorizedRole>
            </authorizedRoles>
        </permission>
    </resource>
    <resource secured="true">
        <uri>content_profiles/edit</uri>
        <description>Content Profiles: Edit</description>
        <permission type="UPDATE">
            <authorizedRoles>
                <authorizedRole>Services.Action.Admin</authorizedRole>
                <authorizedRole>Services.Action.Developer</authorizedRole>
                <authorizedRole>Services.Action.Admin.ContentProfile</authorizedRole>
            </authorizedRoles>
        </permission>
    </resource>
    <resource secured="true">
        <uri>content_profiles/update</uri>
        <description>Content Profiles: Update</description>
        <permission type="UPDATE">
            <authorizedRoles>
                <authorizedRole>Services.Action.Admin</authorizedRole>
                <authorizedRole>Services.Action.Developer</authorizedRole>
                <authorizedRole>Services.Action.Admin.ContentProfile</authorizedRole>
            </authorizedRoles>
        </permission>
    </resource>
    <resource secured="true">
        <uri>content_profiles/create</uri>
        <description>Content Profiles: Create</description>
        <permission type="CREATE">
            <authorizedRoles>
                <authorizedRole>Services.Action.Admin</authorizedRole>
                <authorizedRole>Services.Action.Developer</authorizedRole>
                <authorizedRole>Services.Action.Admin.ContentProfile</authorizedRole>
            </authorizedRoles>
        </permission>
    </resource>
    <resource secured="true">
        <uri>content_profiles/destroy</uri>
        <description>Content Profile: Destroy</description>
        <permission type="DELETE">
            <authorizedRoles>
                <authorizedRole>Services.Action.Admin</authorizedRole>
                <authorizedRole>Services.Action.Developer</authorizedRole>
                <authorizedRole>Services.Action.Admin.ContentProfile</authorizedRole>
            </authorizedRoles>
        </permission>
    </resource>

    <!--=========================  Access Profile  ============================ -->
    <resource secured="true">
        <uri>user_group_roles/index</uri>
        <description>Access Profile Groups</description>
        <permission type="READ">
            <authorizedRoles>
                <authorizedRole>Services.Action.Admin</authorizedRole>
                <authorizedRole>Services.Action.Developer</authorizedRole>
                <authorizedRole>Services.Action.Admin.UserAuthorizationGroups</authorizedRole>
            </authorizedRoles>
        </permission>
    </resource>
    <resource secured="true">
        <uri>user_group_roles/show</uri>
        <description>Access Profile Group: Show</description>
        <permission type="READ">
            <authorizedRoles>
                <authorizedRole>Services.Action.Admin</authorizedRole>
                <authorizedRole>Services.Action.Developer</authorizedRole>
                <authorizedRole>Services.Action.Admin.UserAuthorizationGroups</authorizedRole>
                <authorizedRole>Services.Action.Use.UserAuthorizationGroups</authorizedRole>
            </authorizedRoles>
        </permission>
    </resource>
    <resource secured="true">
        <uri>user_group_roles/new</uri>
        <description>Access Profile Group: New</description>
        <permission type="CREATE">
            <authorizedRoles>
                <authorizedRole>Services.Action.Admin</authorizedRole>
                <authorizedRole>Services.Action.Developer</authorizedRole>
                <authorizedRole>Services.Action.Admin.UserAuthorizationGroups</authorizedRole>
            </authorizedRoles>
        </permission>
    </resource>
    <resource secured="true">
        <uri>user_group_roles/edit</uri>
        <description>Access Profile Group: Edit</description>
        <permission type="UPDATE">
            <authorizedRoles>
                <authorizedRole>Services.Action.Admin</authorizedRole>
                <authorizedRole>Services.Action.Developer</authorizedRole>
                <authorizedRole>Services.Action.Admin.UserAuthorizationGroups</authorizedRole>
            </authorizedRoles>
        </permission>
    </resource>
    <resource secured="true">
        <uri>user_group_roles/update</uri>
        <description>Access Profile Group: Update</description>
        <permission type="UPDATE">
            <authorizedRoles>
                <authorizedRole>Services.Action.Admin</authorizedRole>
                <authorizedRole>Services.Action.Developer</authorizedRole>
                <authorizedRole>Services.Action.Admin.UserAuthorizationGroups</authorizedRole>
            </authorizedRoles>
        </permission>
    </resource>
    <resource secured="true">
        <uri>user_group_roles/create</uri>
        <description>Access Profile Group: Create</description>
        <permission type="CREATE">
            <authorizedRoles>
                <authorizedRole>Services.Action.Admin</authorizedRole>
                <authorizedRole>Services.Action.Developer</authorizedRole>
                <authorizedRole>Services.Action.Admin.UserAuthorizationGroups</authorizedRole>
            </authorizedRoles>
        </permission>
    </resource>
    <resource secured="true">
        <uri>user_group_roles/destroy</uri>
        <description>Access Profile Group: Destroy</description>
        <permission type="DELETE">
            <authorizedRoles>
                <authorizedRole>Services.Action.Admin</authorizedRole>
                <authorizedRole>Services.Action.Developer</authorizedRole>
                <authorizedRole>Services.Action.Admin.UserAuthorizationGroups</authorizedRole>
            </authorizedRoles>
        </permission>
    </resource>

    <!--=========================  DEVELOPMENT RESOURCES  ============================ -->
  <resource secured="true">
      <uri>pages/developer</uri>
      <description>System Status Page for Developers</description>
      <userdata>"drawerid:27655173|filetype:27635476|foldertype:27637844|doctype:955"</userdata>
      <permission type="READ">
          <authorizedRoles>
              <authorizedRole>Services.Action.Admin</authorizedRole>
              <authorizedRole>Services.Action.Developer</authorizedRole>
          </authorizedRoles>
      </permission>
  </resource>
    <resource secured="false">
        <uri>"/rails/info/routes"</uri>
        <description>Rails Routes</description>
    </resource>
    <resource secured="false">
        <uri>/rails/info/properties</uri>
        <description>Rails Runtime Details</description>
    </resource>

</accessRegistry>
