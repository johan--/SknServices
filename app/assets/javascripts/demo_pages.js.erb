/**
 * Created by jscott on 1/1/16.
 * Refs: https://github.com/rweng/jquery-datatables-rails
 *       http://api.jquery.com/jQuery.getJSON/
 *       http://getbootstrap.com/components/#panels
 *       http://datatables.net
 */


var logEnabled = <%= Rails.env.development? %>,
    csrfToken,
    userTable,
    accessTable,
    contentTable,
    resultTable;


/**
 * Prevents debuging messages from going to console none development mode
 * @param message {string}  to log on console
 */
        function consoleLog(message) {
    if (logEnabled) {
        console.log(message);
    }
}

/**
 * Content/Access Profile Table Selection
 * - fire ajax to get data, using url on accessible-table tbody
 * - then update accessible-table rows
 */
function profileTablesRequester(ev) {
    var dataPackage = $(ev.currentTarget).data().package,
        contentType = dataPackage.hasOwnProperty('resource_options'), // then AccessProfile
        accessUrl = $("#accessible-table tbody" ).data().accessibleUrl,
        dataResponse = {},
        textStatus = "";

    $("table.profile tbody tr").removeClass('success');
    $(ev.currentTarget).addClass('success');

    $.ajax({
        headers: {'X-CSRF-Token': csrfToken, 'X-XSRF-Token': csrfToken },
        method: "GET",
        dataType: "json",
        contentType: 'json',
        url: accessUrl,
        data: dataPackage,
        accepts: 'json'
    }).done(function(data,textStatus,jqXHR) {
            textStatus = textStatus;
            dataResponse = data.package;
            replaceAccessibleTableRows(dataResponse);
            console.log( "profileTablesRequester() success: " + textStatus + ", Response=" + JSON.stringify(dataResponse));
      }).fail(function(jqXHR, textStatus, errorThrown) {
            textStatus = textStatus;
            resultTable.clear().draw();
            console.log( "profileTablesRequester() error: " + textStatus + ', thrown=' + errorThrown + ', package=' + JSON.stringify(dataPackage));
      });

    return false;
}


/**
 * Reloads the content-table with supplied rows from a contentProfile package
 * @param dataPackage {contentProfile}
 */
function replaceContentTableRows(dataPackage) {
    var tTitle = $('#content-title'),
            vList = dataPackage.package.content_profile.entries,
            newRow = [],
            counter = 0,
            trNode,
            trRow;

    tTitle.html(dataPackage.package.message);
    if (dataPackage.package.success) {

        contentTable.rows().remove().draw();

        $.each(vList, function(index, row) {
            newRow = [];
            newRow.push('<td>' + row.description  + '</td>');
            newRow.push('<td>' + row.content_type  + '</td>');
            newRow.push('<td>' + row.content_type_description  + '</td>');
            newRow.push('<td>' + row.topic_type  + '</td>');
//            newRow.push('<td>' + row.topic_value  + '</td>');
            newRow.push('<td>' + JSON.stringify(row.content_value)  + '</td>');
            trRow = $('<tr>').append(newRow.join());

            trNode = contentTable.row.add(trRow).draw().node();
            $(trNode).data('package', row).on( "click", profileTablesRequester);
            counter = index + 1;
        });
    } else {
        contentTable.rows().remove().draw();
        resultTable.rows().remove().draw();
    }

    consoleLog('replaceContentTableRows(rowsAdded=' + counter + ')');
    return false;
}

/**
 * Reloads the access-table with supplied rows from a accessProfile package
 * @param dataPackage {accessProfile}
 */
function replaceAccessTableRows(dataPackage) {
    var tTitle = $('#access-title'),
            vList = dataPackage.package.access_profile.entries,
            newRow = [],
            counter = 0,
            trNode,
            trRow;

    tTitle.html(dataPackage.package.message);
    if (dataPackage.package.success) {
        accessTable.clear().draw();

        $.each(vList, function(index, row) {
            newRow = [];
            newRow.push('<td>' + row.description  + '</td>');
            newRow.push('<td>' + row.content_type  + '</td>');
            newRow.push('<td>' + row.content_type_description  + '</td>');
            newRow.push('<td>' + row.topic_type  + '</td>');
            newRow.push('<td>' + row.topic_value  + '</td>');
            newRow.push('<td>' + JSON.stringify(row.content_value)  + '</td>');
            trRow = $('<tr>').append(newRow.join());

            trNode = accessTable.row.add(trRow).draw().node();
            $(trNode).data('package', row).on( "click", profileTablesRequester);
            counter = index + 1;
        });
    } else {
        accessTable.clear().draw();
        resultTable.clear().draw();
    }

    consoleLog('replaceAccessTableRows(rowsAdded=' + counter + ')');
    return false;
}

/**
 * Reloads the accessible-table with supplied rows from a Profile package
 * @param dataPackage {ProfileEntry}
 *
 * dataPackage = {success: true, message: "", content: 'access',
 *                username: pg_u.username, display_name: pg_u.display_name ,
 *                package: [
 *                  {source: "datafiles", filename: "someFile.dat", created: '12/1/2015', size: "0"},
 *                  ...
 *                         ]
 *                }
 */
function replaceAccessibleTableRows(dataPackage) {
    var tTitle = $('#accessible-title'),
            vList = dataPackage.package,
            newRow = [],
            counter = 0,
            trNode,
            trRow;

    tTitle.html(dataPackage.message);
    if (dataPackage.success) {
        resultTable.clear().draw();
        $.each(vList, function(index, row) {
                    newRow = [];
                    newRow.push('<td>' + row.source  + '</td>');
                    newRow.push('<td>' + row.filename  + '</td>');
                    newRow.push('<td>' + row.created  + '</td>');
                    newRow.push('<td>' + row.size  + '</td>');
                    trRow = $('<tr>').append(newRow.join());

                    trNode = resultTable.row.add(trRow).draw().node();
                    $(trNode).data('package', row); // .on( "click", profileTablesRequester);
                    counter = index + 1;
        });
    } else {
        resultTable.clear().draw();
    }

    consoleLog('replaceAccessibleTableRows(rowsAdded=' + counter + ')');
    return false;
}

/* ********************************************************
 * JQuery Enabled Processing
 * ********************************************************
 */
$(function() {
    /**
     * Initial
     */

    csrfToken = $('meta[name="csrf-token"]').attr('content');

    accessTable = $('#access-table').DataTable({
        "autoWidth": true,
        "paging": false,
        "searching": false,
        "scrollY": "420px",
        "scrollCollapse": true,
        "scroller": true,
        select: {
            selector: 'tr',
            style: "single",
            items: "row",
            info: true
        },
        "language": {
            "emptyTable": "Please make a choice from the Users table on the left."
        }
    });

    accessTable.on( 'select', 'tr', function ( e, dt, type, indexes ) {
        consoleLog( "Access-Table Selected: " + type );
        /* RowSelected Do something Here */
    });

    contentTable = $('#content-table').DataTable({
        "autoWidth": true,
        "paging": false,
        "searching": false,
        "scrollY": "420px",
        "scrollCollapse": true,
        "scroller": true,
        select: {
            selector: 'tr',
            style: "single",
            items: "row",
            info: true
        },
        "language": {
            "emptyTable": "Please make a choice from the Users table on the left."
        }
    });

    contentTable.on( 'select', 'tr', function ( e, dt, type, indexes ) {
        consoleLog( "Content-Table Selected: " + type );
        /* RowSelected Do something Here */
    });



    resultTable = $('#accessible-table').DataTable({
        "autoWidth": true,
        "paging": false,
        "searching": false,
        "scrollY": "420px",
        "scrollCollapse": true,
        "scroller": true,
        select: {
            selector: 'tr',
            style: "single",
            items: "row",
            info: true
        },
        "language": {
            "emptyTable": "Please make a choice from content table above."
        }
    });

    resultTable.on( 'select', 'tr', function ( e, dt, type, indexes ) {
        consoleLog( "Accessible-Table Selected: " + type );
        /* RowSelected Do something Here */
    });


    /** TODO: Select Extension is NOT Working

     There two events are given information about the item selected in the form
     of what item type it is (row, column or cell) and its data index (see row().index(),
     column().index() and cell().index()).

     e = jQuery event object
     dt = DataTables API instance
     type = Items being selected. This can be 'rows', 'columns' or 'cells'.
     indexes = The DataTables' indexes of the selected items. This can be used
     with the table selector methods (rows() for example). please
     refer to row().index(),
     */
    userTable = $('#users-table').DataTable({
        "autoWidth": true,
        "paging": false,
        "searching": false,
        "scrollY": "620px",
        "scrollCollapse": true,
        "scroller": true,
        "select": {
            "selector": "tr",
            "style": "single",
            "items": "row",
            "info": true
        },
        "data": null,
        "columns": [
            { "data": 'username' },
            { "data": 'display_name' }
        ],
        "language": {
            "emptyTable": "No User Available!"
        }
    });

    $('#users-table tbody tr').on('click', function(event) {
        var dataPackage = $(event.currentTarget).data().package,
            contentType = dataPackage.package.hasOwnProperty('access_profile');

        /*
         Initialize Title on Accessible Content Table
         */
        $('#accessible-title').
           html('Accessible Content for ' + dataPackage.username + ":" + dataPackage.display_name );

        resultTable.clear().draw();

        $("#users-table tbody tr").removeClass('info');
        $(event.currentTarget).addClass('info');

        if (contentType){
            replaceAccessTableRows(dataPackage);
        } else {
            replaceContentTableRows(dataPackage);
        }

        consoleLog( dataPackage.username + " Selected."  + JSON.stringify(dataPackage));
    });

    /* choose first one to start things off */
    $('#users-table tbody tr').first().click();





});

