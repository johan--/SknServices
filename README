===SknService
================

===PostgreSQL Required

```bash

    $ bundle install
    $ RAILS_ENV=development rake db:create db:migrate db:seed
    $ RAILS_ENV=production rake db:create db:migrate db:seed
    $ RAILS_ENV=test rake db:create db:migrate db:seed
    $ rspec
    $ bundle exec rails server
```


```ruby

      # Commission ids

      # Drawer IDs: FAGN, <RefId>27655173</RefId>
      # File Types: FAGN, <RefId>27635476</RefId>
      # Folder Names: Commission/30023 <RefId>27637844</RefId>
      # Document Type: STMT, <RefId>955</RefId>
      # {
      #   :id=>"c02ac7af-aed0-4582-895b-827d4c1a3ae5",
      #   :name=>"Statements",
      #   :ref_id=>"29734314",
      #   :type=>"955",
      #   :pages=>"2",
      #   :date=>Thu, 09 Jul 2015 17:35:27 +0000
      # },
```

=== Model Templates

rails generate model NAME [field[:type][:index] field[:type][:index]] [options]
rails generate scaffold NAME [field[:type][:index] field[:type][:index]] [options]


=== Model Generation (SimpleForm UI)
Make sure you edit config/initializers/generators.rb first

```bash
rails g model Users username:string:index name:string email:string password:digest remember_token:string:index password_reset_token:string password_reset_date:datetime assigned_groups:string roles:string active:boolean file_access_token:string


# Gem 'annotate'
bundle exec annotate --exclude tests,fixtures,factories,serializers
```

Final Content Package on Users List
data-package="
    {
        &quot;username&quot;:&quot;skoona&quot;,
        &quot;display_name&quot;:&quot;Employee Primary User: Developer&quot;,
        &quot;package&quot;:{
            &quot;success&quot;:true,
            &quot;message&quot;:&quot;&quot;,
            &quot;accessible_content_url&quot;:&quot;/accessible_content?id=content&quot;,
            &quot;page_user&quot;:&quot;skoona&quot;,
            &quot;content_profile&quot;:{
                &quot;username&quot;:&quot;skoona&quot;,
                &quot;display_name&quot;:&quot;Employee Primary User: Developer&quot;,
                &quot;entries&quot;:[
                    { &quot;description&quot;:&quot;Determine which agency documents can be seen&quot;,
                      &quot;topic_value&quot;:&quot;Agency&quot;,
                      &quot;content_value&quot;:[
                                         &quot;68601&quot;,
                                         &quot;68602&quot;,
                                         &quot;68603&quot;
                                                ],
                      &quot;content_type&quot;:&quot;Commission&quot;,
                      &quot;content_type_description&quot;:&quot;Monthly Commission Reports and Files&quot;,
                      &quot;topic_type&quot;:&quot;Agency&quot;,
                      &quot;topic_type_description&quot;:&quot;Agency Actions&quot;
                    },
                    {&quot;description&quot;:&quot;Determine which accounts will have notification sent&quot;,&quot;topic_value&quot;:&quot;Account&quot;,&quot;content_value&quot;:[&quot;AdvCancel&quot;,&quot;FutCancel&quot;,&quot;Cancel&quot;],&quot;content_type&quot;:&quot;Notification&quot;,&quot;content_type_description&quot;:&quot;Email Notification of Related Events&quot;,&quot;topic_type&quot;:&quot;Account&quot;,&quot;topic_type_description&quot;:&quot;Account Actions&quot;},
                    {&quot;description&quot;:&quot;Determine which States agent may operate in.&quot;,&quot;topic_value&quot;:&quot;LicensedStates&quot;,&quot;content_value&quot;:[&quot;21&quot;,&quot;9&quot;,&quot;23&quot;],&quot;content_type&quot;:&quot;Operations&quot;,&quot;content_type_description&quot;:&quot;Business Operational Metric&quot;,&quot;topic_type&quot;:&quot;LicensedStates&quot;,&quot;topic_type_description&quot;:&quot;Agent Actions&quot;}
                                    ],
                &quot;pak&quot;:&quot;eafbf74d395cd68e1b5743bad33a82b4&quot;,
                &quot;profile_type&quot;:&quot;EmployeePrimary&quot;,
                &quot;profile_type_description&quot;:&quot;BMI Admin User&quot;,
                &quot;provider&quot;:&quot;BCrypt&quot;,
                &quot;email&quot;:&quot;skoona@gmail.com&quot;
                                        }
                           }
    }

Final Access Package on Users List
data-package="
    {
        &quot;username&quot;:&quot;skoona&quot;,
        &quot;display_name&quot;:&quot;Employee Primary User: Developer&quot;,
        &quot;package&quot;:{
            &quot;success&quot;:true,
            &quot;message&quot;:&quot;&quot;,
            &quot;accessible_content_url&quot;:&quot;/accessible_content?id=access&quot;,
            &quot;page_user&quot;:&quot;skoona&quot;,
            &quot;access_profile&quot;:[
                {&quot;name&quot;:&quot;Services.Action.Admin&quot;,&quot;description&quot;:&quot;Super User&quot;,&quot;type&quot;:&quot;EmployeePrimary&quot;},
                {&quot;name&quot;:&quot;Services.Action.Primary&quot;,&quot;description&quot;:&quot;Super User&quot;,&quot;type&quot;:&quot;EmployeePrimary&quot;},
                {&quot;name&quot;:&quot;Services.Action.Developer&quot;,&quot;description&quot;:&quot;Developer&quot;,&quot;type&quot;:&quot;EmployeePrimary&quot;},
                {&quot;name&quot;:&quot;Services.Action.ResetPassword&quot;,&quot;description&quot;:&quot;Reset Forgotten Password via EMail&quot;,&quot;type&quot;:&quot;EmployeePrimary&quot;},
                {&quot;name&quot;:&quot;Services.Action.Admin.ContentProfile&quot;,&quot;description&quot;:&quot;Administer Authorization Content Profile&quot;,&quot;type&quot;:&quot;EmployeePrimary&quot;},
                {&quot;name&quot;:&quot;Services.Action.Admin.UserAuthorizationGroups&quot;,&quot;description&quot;:&quot;Administer Authorization Group&quot;,&quot;type&quot;:&quot;EmployeePrimary&quot;},
                {&quot;name&quot;:&quot;Services.Action.Admin.UserRecords&quot;,&quot;description&quot;:&quot;Administer User Records&quot;,&quot;type&quot;:&quot;EmployeePrimary&quot;},
                {&quot;name&quot;:&quot;Services.Action.Developer&quot;,&quot;description&quot;:&quot;Developer&quot;,&quot;type&quot;:&quot;Assigned Role&quot;},
                {&quot;name&quot;:&quot;EmployeePrimary&quot;,&quot;description&quot;:&quot;BMI Admin User&quot;,&quot;type&quot;:&quot;Assigned Group&quot;}
                                       ]
                            }
    }

<tr data-package=" Content
  {
    "username":"skoona",
    "description":"determine which agency documents can be seen",
    "topic_value":"agency",
    "content_value":["68601","68602","68603"],
    "content_type":"commission",
    "content_type_description":"monthly commission reports and files",
    "topic_type":"agency",
    "topic_type_description":"agency actions"
  }

<tr data-package=" Access
  {
    "username":"skoona",
    "name":"services.action.admin",
    "description":"super user",
    "type":"employeeprimary"
  }

[jscott@iMac SknService]$ rake routes
                       Prefix Verb   URI Pattern                              Controller#Action
                        users GET    /users(.:format)                         users#index
                              POST   /users(.:format)                         users#create
                     new_user GET    /users/new(.:format)                     users#new
                    edit_user GET    /users/:id/edit(.:format)                users#edit
                         user GET    /users/:id(.:format)                     users#show
                              PATCH  /users/:id(.:format)                     users#update
                              PUT    /users/:id(.:format)                     users#update
                              DELETE /users/:id(.:format)                     users#destroy
             user_group_roles GET    /user_group_roles(.:format)              user_group_roles#index
                              POST   /user_group_roles(.:format)              user_group_roles#create
          new_user_group_role GET    /user_group_roles/new(.:format)          user_group_roles#new
         edit_user_group_role GET    /user_group_roles/:id/edit(.:format)     user_group_roles#edit
              user_group_role GET    /user_group_roles/:id(.:format)          user_group_roles#show
                              PATCH  /user_group_roles/:id(.:format)          user_group_roles#update
                              PUT    /user_group_roles/:id(.:format)          user_group_roles#update
                              DELETE /user_group_roles/:id(.:format)          user_group_roles#destroy
             content_profiles GET    /content_profiles(.:format)              content_profiles#index
                              POST   /content_profiles(.:format)              content_profiles#create
          new_content_profile GET    /content_profiles/new(.:format)          content_profiles#new
         edit_content_profile GET    /content_profiles/:id/edit(.:format)     content_profiles#edit
              content_profile GET    /content_profiles/:id(.:format)          content_profiles#show
                              PATCH  /content_profiles/:id(.:format)          content_profiles#update
                              PUT    /content_profiles/:id(.:format)          content_profiles#update
                              DELETE /content_profiles/:id(.:format)          content_profiles#destroy
              password_resets POST   /password_resets(.:format)               password_resets#create
           new_password_reset GET    /password_resets/new(.:format)           password_resets#new
          edit_password_reset GET    /password_resets/:id/edit(.:format)      password_resets#edit
               password_reset PATCH  /password_resets/:id(.:format)           password_resets#update
                              PUT    /password_resets/:id(.:format)           password_resets#update
     unauthenticated_sessions GET    /sessions/unauthenticated(.:format)      sessions#unauthenticated
                     sessions POST   /sessions(.:format)                      sessions#create
                  new_session GET    /sessions/new(.:format)                  sessions#new
                      session DELETE /sessions/:id(.:format)                  sessions#destroy
                   home_pages GET    /pages/home(.:format)                    pages#home
             learn_more_pages GET    /pages/learn_more(.:format)              pages#learn_more
                  about_pages GET    /pages/about(.:format)                   pages#about
              developer_pages GET    /pages/developer(.:format)               pages#developer
          details_model_pages GET    /pages/details_model(.:format)           pages#details_model
        details_content_pages GET    /pages/details_content(.:format)         pages#details_content
         details_access_pages GET    /pages/details_access(.:format)          pages#details_access
           details_auth_pages GET    /pages/details_auth(.:format)            pages#details_auth
  accessible_content_profiles GET    /profiles/accessible_content(.:format)   profiles#accessible_content
   available_content_profiles POST   /profiles/available_content(.:format)    profiles#available_content
content_profile_demo_profiles GET    /profiles/content_profile_demo(.:format) profiles#content_profile_demo
 access_profile_demo_profiles GET    /profiles/access_profile_demo(.:format)  profiles#access_profile_demo
                      signout DELETE /signout(.:format)                       sessions#destroy
                       signin GET    /signin(.:format)                        sessions#new
                         root GET    /                                        pages#home
[jscott@iMac SknService]$


Disabled :accessible_content security for developer reasons
- access_registry.xml {false}
- settings.yml { security.public_pages entry for warden bypass}

