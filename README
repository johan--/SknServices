SknService
================


rails generate model NAME [field[:type][:index] field[:type][:index]] [options]

  enable_extension "plpgsql"

  create_table "users", force: :cascade do |t|
    t.string   "username"
    t.string   "name"
    t.string   "email"
    t.string   "password_digest"
    t.string   "remember_token"
    t.string   "password_reset_token"
    t.datetime "password_reset_date"
    t.string   "role_groups"
    t.string   "roles"
    t.boolean  "active",               default: true
    t.text     "address"
    t.string   "voice_phone"
    t.string   "sms_phone"
    t.string   "file_access_token"
    t.datetime "created_at"
    t.datetime "updated_at"
  end

  add_index "users", ["remember_token"], name: "index_users_on_remember_token", using: :btree
  add_index "users", ["username"], name: "index_users_on_username", using: :btree


rails g model Users username:string:index name:string email:string password:digest remember_token:string:index password_reset_token:string password_reset_date:datetime role_groups:string roles:string active:boolean file_access_token:string


careful with this command, but it could help when 'TypeError: incompatible marshal file format (can't be read)' happens
$ git clean -d -x -f

Rails 3.1 already added a feature that automatically generate indexes for associations, by simply invoking:

rails g scaffold Comment post:references title:string body:text
With the above, Rails will detect that post is a reference and it will automatically 1)
add a post_id integer column, 2) add an association to your model and 3) add an index to
that column.

 allows you to specify which columns should have an (unique) index. So one could write:

rails g scaffold Person name:index email:uniq
And the generator will automatically generate an index for name and an unique index for e-mail. There are other features there as well, so donâ€™t forget to checkout the CHANGELOG.

