===AuthService
---

Author: James Scott <jscott@brotherhoodmutual.com>
Date: Dec 2015

This file contains a collection of notes and data used during development
The Readme.md file is more like documentation; outside of the app itself.



===PostgreSQL Required

```bash

    $ bundle install
    $ RAILS_ENV=development rake db:reset
    $ RAILS_ENV=production rake db:reset
    $ RAILS_ENV=test rake db:reset
    $ rspec
    $ bundle exec rails server
    $
    $ # to reload test data either db:seed or the following
    $ rake access_registry:reports:db_profiles access_registry:preload:create_content_profiles access_registry:reports:db_profiles
```


```ruby

      # Commission ids

      # Drawer IDs: FAGN, <RefId>27655173</RefId>
      # File Types: FAGN, <RefId>27635476</RefId>
      # Folder Names: Commission/30023 <RefId>27637844</RefId>
      # Document Type: STMT, <RefId>955</RefId>
      # {
      #   :id=>"c02ac7af-aed0-4582-895b-827d4c1a3ae5",
      #   :name=>"Statements",
      #   :ref_id=>"29734314",
      #   :type=>"955",
      #   :pages=>"2",
      #   :date=>Thu, 09 Jul 2015 17:35:27 +0000
      # },
```



=== Model Templates

rails generate model NAME [field[:type][:index] field[:type][:index]] [options]
rails generate scaffold NAME [field[:type][:index] field[:type][:index]] [options]


=== Model Generation (SimpleForm UI)
Make sure you edit config/initializers/generators.rb first

```bash

rails g model Users username:string:index name:string email:string password:digest remember_token:string:index password_reset_token:string password_reset_date:datetime assigned_groups:string roles:string active:boolean file_access_token:string


# Gem 'annotate'
bundle exec annotate
```


###Annoying Things

    poltergeist is the pits, signout_url fails because of the delete method
                javascript interactions are flaky
                webkit is no real alternative, since it has mac install issues


###Neat Thingys

    my_hash.try(:[], 'key1').try(:[], 'key2').try(:[], 'key3')


## Ajax Transaction

```
Parameters: {"id"=>"content", "user_options"=>["AgencyPrimary", "0034", "0037", "0040"], "topic_value"=>"Agency", "content_value"=>["68601", "68602", "68603"], "content_type"=>"Commission", "content_type_description"=>"Monthly Commission Reports and Files", "topic_type"=>"Agency", "topic_type_description"=>"Agency Actions", "description"=>"Determine which agency documents can be seen", "username"=>"aptester"}

REQUEST: { ContentProfile
    "user_options":["Manager","0034","0037","0040"],
    "topic_value":"Agency",
    "content_value":["68601","68602","68603"],
    "content_type":"Commission",
    "content_type_description":"Monthly Commission Reports and Files",
    "topic_type":"Agency",
    "topic_type_description":"Agency Actions",
    "description":"Determine which agency documents can be seen",
    "username":"developer"
    }
RESPONSE: {
    "content":"content"
    "success":true,
    "message":"",
    "username":"developer",
    "display_name":"Employee Primary User: Developer",
    "package":[
        {"source":"datafiles","filename":"someFile.dat","created":"2016-01-05T16:24:12.066-05:00","size":"0"},
        {"source":"images","filename":"somePic.png","created":"2016-01-05T16:24:12.066-05:00","size":"0"},
        {"source":"pdfs","filename":"someFile.pdf","created":"2016-01-05T16:24:12.066-05:00","size":"0"}
              ]
    }

Parameters: {"id"=>"access", "user_options"=>["AgencyPrimary", "0034", "0037", "0040"], "topic_value"=>"PDF", "content_value"=>{"doctype"=>"954"}, "content_type"=>"Commission", "content_type_description"=>"Agency Commission Statements", "topic_type"=>"Agency", "topic_type_description"=>"Agency Commission Statements", "description"=>"Agency Commission Statements", "uri"=>"Commission/Agency/PDF", "username"=>"aptester"}
REQUEST:  { AccessProfile
    "user_options":["Manager","0034","0037","0040"],
    "topic_value":"PDF",
    "content_value":{"doctype":"954"},
    "content_type":"Commission",
    "content_type_description":"Agency Commission Statements",
    "topic_type":"Agency",
    "topic_type_description":"Agency Commission Statements",
    "description":"Agency Commission Statements",
    "uri":"Commission/Agency/PDF",
    "username":"developer"
    }
RESPONSE: {
    "success":true,
    "content":"access"
    "message":"",
    "username":"developer",
    "display_name":"Employee Primary User: Developer",
    "package":[
        {"source":"datafiles","filename":"someFile.dat","created":"2016-01-05T16:18:57.881-05:00","size":"0"},
        {"source":"images","filename":"somePic.png","created":"2016-01-05T16:18:57.881-05:00","size":"0"},
        {"source":"pdfs","filename":"someFile.pdf","created":"2016-01-05T16:18:57.881-05:00","size":"0"}
              ]
    }
```

[jscott@iMac AuthService]$ rake routes
                       Prefix Verb   URI Pattern                              Controller#Action
                        users GET    /users(.:format)                         users#index
                              POST   /users(.:format)                         users#create
                     new_user GET    /users/new(.:format)                     users#new
                    edit_user GET    /users/:id/edit(.:format)                users#edit
                         user GET    /users/:id(.:format)                     users#show
                              PATCH  /users/:id(.:format)                     users#update
                              PUT    /users/:id(.:format)                     users#update
                              DELETE /users/:id(.:format)                     users#destroy
             user_group_roles GET    /user_group_roles(.:format)              user_group_roles#index
                              POST   /user_group_roles(.:format)              user_group_roles#create
          new_user_group_role GET    /user_group_roles/new(.:format)          user_group_roles#new
         edit_user_group_role GET    /user_group_roles/:id/edit(.:format)     user_group_roles#edit
              user_group_role GET    /user_group_roles/:id(.:format)          user_group_roles#show
                              PATCH  /user_group_roles/:id(.:format)          user_group_roles#update
                              PUT    /user_group_roles/:id(.:format)          user_group_roles#update
                              DELETE /user_group_roles/:id(.:format)          user_group_roles#destroy
             content_profiles GET    /content_profiles(.:format)              content_profiles#index
                              POST   /content_profiles(.:format)              content_profiles#create
          new_content_profile GET    /content_profiles/new(.:format)          content_profiles#new
         edit_content_profile GET    /content_profiles/:id/edit(.:format)     content_profiles#edit
              content_profile GET    /content_profiles/:id(.:format)          content_profiles#show
                              PATCH  /content_profiles/:id(.:format)          content_profiles#update
                              PUT    /content_profiles/:id(.:format)          content_profiles#update
                              DELETE /content_profiles/:id(.:format)          content_profiles#destroy
              password_resets POST   /password_resets(.:format)               password_resets#create
           new_password_reset GET    /password_resets/new(.:format)           password_resets#new
          edit_password_reset GET    /password_resets/:id/edit(.:format)      password_resets#edit
               password_reset PATCH  /password_resets/:id(.:format)           password_resets#update
                              PUT    /password_resets/:id(.:format)           password_resets#update
     unauthenticated_sessions GET    /sessions/unauthenticated(.:format)      sessions#unauthenticated
                     sessions POST   /sessions(.:format)                      sessions#create
                  new_session GET    /sessions/new(.:format)                  sessions#new
                      session DELETE /sessions/:id(.:format)                  sessions#destroy
                   home_pages GET    /pages/home(.:format)                    pages#home
             learn_more_pages GET    /pages/learn_more(.:format)              pages#learn_more
                  about_pages GET    /pages/about(.:format)                   pages#about
              developer_pages GET    /pages/developer(.:format)               pages#developer
          details_model_pages GET    /pages/details_model(.:format)           pages#details_model
        details_content_pages GET    /pages/details_content(.:format)         pages#details_content
         details_access_pages GET    /pages/details_access(.:format)          pages#details_access
           details_auth_pages GET    /pages/details_auth(.:format)            pages#details_auth
  accessible_content_profiles GET    /profiles/accessible_content(.:format)   profiles#accessible_content
content_profile_demo_profiles GET    /profiles/content_profile_demo(.:format) profiles#content_profile_demo
 access_profile_demo_profiles GET    /profiles/access_profile_demo(.:format)  profiles#access_profile_demo
                      signout DELETE /signout(.:format)                       sessions#destroy
                       signin GET    /signin(.:format)                        sessions#new
                         root GET    /                                        pages#home
[jscott@iMac AuthService]$


Every User produces the following json object.
{
  "user_options":["Manager","0034","0037","0040"],
  "username":"developer",
  "display_name":"Employee Primary User: Developer",
  "package":{
    "success":true,
    "message":"AccessProfile Entries for developer:Employee Primary User: Developer Options=Manager,0034,0037,0040",
    "user_options":["Manager","0034","0037","0040"],
    "accessible_content_url":"/profiles/accessible_content.json?id=access",
    "page_user":"developer",
    "access_profile":{
        "username":"developer","entries":[
           {"user_options":["Manager","0034","0037","0040"],
            "topic_value":"PDF",
            "content_value":{"doctype":"954"},
            "content_type":"Commission",
            "content_type_description":"Agency Commission Statements",
            "topic_type":"Agency",
            "topic_type_description":"Agency Commission Statements",
            "description":"Agency Commission Statements",
            "username":"developer",
            "uri":"Commission/Agency/PDF"
           },
           {"user_options":["Manager","0034","0037","0040"],"topic_value":"CSV","content_value":{"doctype":"955"},"content_type":"Commission","content_type_description":"Agency Commission CSV Datafiles","topic_type":"Agency","topic_type_description":"Agency Commission CSV Datafiles","description":"Agency Commission CSV Datafiles","username":"developer","uri":"Commission/Agency/CSV"},
           {"user_options":["Manager","0034","0037","0040"],"topic_value":"PDF","content_value":{"doctype":"956"},"content_type":"Experience","content_type_description":"Agency Experience Statements","topic_type":"Agency","topic_type_description":"Agency Experience Statements","description":"Agency Experience Statements","username":"developer","uri":"Experience/Agency/PDF"}
                                     ],
        "pak":null,
        "profile_type":"",
        "profile_type_description":"",
        "provider":"UserProfile",
        "display_name":"Employee Primary User: Developer",
        "email":"developer@gmail.com"
    }
  }
}

# WIP Notes
        <p class="lead">
            This application demonstrates and explores methods for Authentication, Access Authorizations,
            and Content Authorizations.  Referred to as UserProfiles, AccessProfiles, and ContentProfiles in
            this application.
        </p>

        <ul class="lead">
            <li>
                UserProfiles deal with userid, password, password resets, and some preferences management.
            </li>
            <li>
                AccessProfiles deal with what each user is allowed to access, click, or view.
            </li>
            <li>
                ContentProfiles deal with specific content access priviledges; which document, etc.
            </li>
        </ul>

        <p>
            UserProfiles and AccessProfiles have many different implementations available, and are well handled processes.  However,
            ContentProfiles are the main focus of exploration in this app, which has proven to be a significant
            engineering challenge to handle the dynamics of Electronic Delivery.
        </p>

     <div class="row">
         <div class="col-md-6">
            <h4>All secured page elements shall be assigned an unique id, called URI, by a developer.</h4>
            <p>
                Authorizations are evaluated for each <em>page access</em>, <em>clickable control</em>, and
                for each <em>showable data element</em>.  Page Access authorization is automated by examining the
                the controller name and method to compose the URI for the page.  Clickable (menu items, buttons, etc)
                authorization requires the developer to use programming helpers to implement authorization.  Showable Data Elements
                have two levels of authorization available; Clickable, and content-based
                authorization using the expanded UserProfile permissions, both use the Secure::AccessRegistry.
            </p>
        </div>
        <div class="panel panel-info col-md-6">
            <div class="panel-body">
                <p>
                    A user might have general access to the Account page which could list five
                    sensitive documents types, but is only allowed to view two document types for that specific
                    account.  Content-based authorization requires a document-type permissions list by account, to
                    enforce access restrictions.
                </p>
            </div>
        </div>
    </div>

ContentProfile's implementation encdoes the requirements by:

        <p>
            Secure::AccessRegistry is the controlling class which maps all the pre-defined (URIs) of the
            application to access role strings; which could be externally administered via LDAP or SQL.  The
            Secure::AccessRegistry uses the UserProfile permissions tuples to enable Content-based authorizations; which
            also could be administered via LDAP or SQL.
        </p>

